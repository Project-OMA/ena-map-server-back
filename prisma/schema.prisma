generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int       @id @default(autoincrement())
  name    String       @db.VarChar(255)
  email         String       @db.VarChar(255)
  password      String       @db.VarChar(255)
  type          Int       
  created_at    DateTime     @default(now())
  updated_at    DateTime     @updatedAt
  group         Group?
  rel_user_map UserMap[]
  rel_owner_map   OwnerMap[]
  rel_owner_user  OwnerUser[]
  rel_owner_group OwnerGroup[]
  rel_user_group UserGroup[]
  @@map("tb_user")
}

model OwnerUser {
  id  Int
  tag    Json
  user   User @relation(fields: [id], references: [id])

  @@id([id])
  @@index([id], map: "rel_owner_user_id_user_fkey")
  @@map("rel_owner_user")
}


model OwnerGroup {
  id_user Int
  id_group Int
  tag    Json
  user   User @relation(fields: [id_user], references: [id])
  group   Group @relation(fields: [id_group], references: [id])

  @@id([id_user, id_group])
  @@index([id_user], map: "rel_owner_group_id_user_fkey")
  @@index([id_group], map: "rel_owner_group_id_group_fkey")
  @@map("rel_owner_group")
}

model UserGroup {
  id_user Int
  id_group Int
  tag    Json
  user User @relation(fields: [id_user], references: [id])
  group   Group @relation(fields: [id_group], references: [id])

  @@id([id_user, id_group])
  @@index([id_user], map: "rel_user_group_id_user_fkey")
  @@index([id_group], map: "rel_user_group_id_group_fkey")
  @@map("rel_user_group")
}


model Group {
  id     Int       @id @default(autoincrement())
  name      String       @db.VarChar(255)
  id_owner      Int       @unique
  created_at    DateTime     @default(now())
  updated_at    DateTime     @updatedAt
  owner         User   @relation(fields: [id_owner], references: [id])
  rel_owner_group OwnerGroup[]
  rel_user_group  UserGroup[]
  @@map("tb_group")
}

model UserMap {
  id_user Int
  id_map    Int
  order     Json
  user   User @relation(fields: [id_user], references: [id])
  map      Map @relation(fields: [id_map], references: [id])

  @@id([id_user, id_map])
  @@index([id_user], map: "rel_user_map_id_user_fkey")
  @@index([id_map], map: "rel_user_map_id_map_fkey")
  @@map("rel_user_map")
}

model OwnerMap {
  id_user Int
  id_map    Int
  tag     Json
  user   User @relation(fields: [id_user], references: [id])
  map      Map @relation(fields: [id_map], references: [id])

  @@id([id_user, id_map])
  @@index([id_user], map: "rel_owner_map_id_user_fkey")
  @@index([id_map], map: "rel_owner_map_id_map_fkey")
  @@map("rel_owner_map")
}

model Map {
  id       Int       @id @default(autoincrement())
  name        String       @db.VarChar(255)
  thumb_url     String     @db.VarChar(255)
  url       String       @db.VarChar(255)
  created_at    DateTime     @default(now())
  updated_at    DateTime     @updatedAt
  rel_user_map UserMap[]
  rel_owner_map   OwnerMap[]
  @@map("tb_map")
}