generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model tb_usuario {
  id_usuario    BigInt       @id @default(autoincrement())
  no_usuario    String       @db.VarChar(255)
  email         String       @db.VarChar(255)
  password      String       @db.VarChar(255)
  type          BigInt       
  created_at    DateTime     @default(now())
  updated_at    DateTime     @updatedAt
  group         tb_group?
  rel_usuario_map rel_usuario_map[]
  rel_owner_map   rel_owner_map[]
  rel_owner_usuario rel_owner_usuario[]
  rel_owner_group rel_owner_group[]
  rel_usuario_group rel_usuario_group[]
}

model rel_owner_usuario {
  id_usuario BigInt
  tag    Json
  usuario   tb_usuario @relation(fields: [id_usuario], references: [id_usuario])

  @@id([id_usuario])
  @@index([id_usuario], map: "rel_owner_usuario_id_usuario_fkey")
}


model rel_owner_group {
  id_usuario BigInt
  id_group BigInt
  tag    Json
  usuario   tb_usuario @relation(fields: [id_usuario], references: [id_usuario])
  group   tb_group @relation(fields: [id_group], references: [id_group])

  @@id([id_usuario, id_group])
  @@index([id_usuario], map: "rel_owner_group_id_usuario_fkey")
  @@index([id_group], map: "rel_owner_group_id_group_fkey")
}

model rel_usuario_group {
  id_usuario BigInt
  id_group BigInt
  tag    Json
  usuario   tb_usuario @relation(fields: [id_usuario], references: [id_usuario])
  group   tb_group @relation(fields: [id_group], references: [id_group])

  @@id([id_usuario, id_group])
  @@index([id_usuario], map: "rel_usuario_group_id_usuario_fkey")
  @@index([id_group], map: "rel_usuario_group_id_group_fkey")
}


model tb_group {
  id_group      BigInt       @id @default(autoincrement())
  no_grupo      String       @db.VarChar(255)
  id_owner      BigInt       @unique
  created_at    DateTime     @default(now())
  updated_at    DateTime     @updatedAt
  owner         tb_usuario   @relation(fields: [id_owner], references: [id_usuario])
  rel_owner_group rel_owner_group[]
  rel_usuario_group rel_usuario_group[]
}

model rel_usuario_map {
  id_usuario BigInt
  id_map    BigInt
  order     Json
  usuario   tb_usuario @relation(fields: [id_usuario], references: [id_usuario])
  mapa      tb_map @relation(fields: [id_map], references: [id_map])

  @@id([id_usuario, id_map])
  @@index([id_usuario], map: "rel_usuario_mapa_id_usuario_fkey")
  @@index([id_map], map: "rel_usuario_mapa_id_map_fkey")
}

model rel_owner_map {
  id_usuario BigInt
  id_map    BigInt
  tag     Json
  usuario   tb_usuario @relation(fields: [id_usuario], references: [id_usuario])
  mapa      tb_map @relation(fields: [id_map], references: [id_map])

  @@id([id_usuario, id_map])
  @@index([id_usuario], map: "rel_owner_mapa_id_usuario_fkey")
  @@index([id_map], map: "rel_owner_mapa_id_map_fkey")
}

model tb_map {
  id_map        BigInt       @id @default(autoincrement())
  no_map        String       @db.VarChar(255)
  thumb_url     String     @db.VarChar(255)
  map_url       String       @db.VarChar(255)
  created_at    DateTime     @default(now())
  updated_at    DateTime     @updatedAt
  rel_usuario_map rel_usuario_map[]
  rel_owner_map   rel_owner_map[]
}